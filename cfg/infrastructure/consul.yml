# Contains values that affect multiple components of the chart.
global:
  # The main enabled/disabled setting.
  # If true, servers, clients, Consul DNS and the Consul UI will be enabled.
  enabled: true
  
  # The prefix used for all resources created in the Helm chart.
  name: consul
  
  # The name of the datacenter that the agents should register as.
  datacenter: ccdc1
  
  # Enables TLS across the cluster to verify authenticity of the Consul servers and clients.
  tls:
    enabled: true
  
  # Enables ACLs across the cluster to secure access to data and APIs.
  acls:
    # If true, automatically manage ACL tokens and policies for all Consul components.
    manageSystemACLs: true
  
  metrics:
   enabled: true
   # Enables Consul servers and clients metrics.
   enableAgentMetrics: true
   # Configures the retention time for metrics in Consul servers and clients.
   agentMetricsRetentionTime: "1m"

# Configures values that configure the Consul server cluster.
server:
  enabled: true
  # The number of server agents to run. This determines the fault tolerance of the cluster.
  replicas: 3

# Contains values that configure the Consul UI.
ui:
  enabled: true
  # Registers a Kubernetes Service for the Consul UI as a NodePort.
  service:
    type: NodePort
 
  metrics:
    enabled: true
    # The metrics provider specification.
    provider: "prometheus"
    # The URL of the prometheus metrics server.
    baseURL: http://prometheus-server.default.svc.cluster.local

# Configures and installs the automatic Consul Connect sidecar injector.
connectInject:
  enabled: true
  
  metrics:
    defaultEnabled: true
    # Enables service metrics and sidecar proxy metrics merging into one endpoint.
    defaultEnableMerging: true

# Configures and installs the Consul API Gateway.
apiGateway:
  enabled: true
  # Image to use for the api-gateway-controller pods and gateway instances
  image: "hashicorp/consul-api-gateway:0.5.0"
  # Configuration settings for the GatewayClass
  managedGatewayClass:
    # Defines the type of service created for gateways (e.g. LoadBalancer, ClusterIP, NodePort)
    # NodePort is primarily used for local deployments.
    serviceType: NodePort
    # Toggles the gateway ports to be mapped to host ports (used for local deployments)
    useHostPorts: true
